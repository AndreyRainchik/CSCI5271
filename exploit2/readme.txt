San Min Liew: liewx024@umn.edu
Andrey Rainchik: rainc001@umn.edu


This version of exploit.sh utilizes buffer overflow in the ex mode of sudobcvi to open a root shell. After 120 characters of input, one can overwrite the EIP pointer to point to ESP, which can be overwritten to hold shellcode. The shellcode that was used came from a security blog called modexp (https://modexp.wordpress.com/2016/06/04/winux/). The shellcode will then be executed to open a privileged /bin/sh shell which will then call /bin/rootshell.

When the exploit script is run by a general user, it will open /dev/null in sudobcvi. Then, it will generate a string that will carefully overflow the necessary stack pointers to run shellcode, and store that string into a file called "shellcode." This is then sent in to the sudobcvi instance which then executes the buffer overflow and pops a shell.

The input string to the ex mode was created by using trial and error to find the correct number of bytes needed before EIP would be overwritten in memory. Then, using dmesg, the address of ESP was found and placed into EIP. Finally, shellcode from modexp was inserted into the location where ESP points to, and as that comes right after the EIP address string, the final string of hex characters was constructed.

